@using Model
@if (_showModal) 
{
    <div class="modal-backdrop">
        <div class="modal">
            <div class="modal-content">
                <EditForm Model="@trainingPlanForm" OnValidSubmit="@HandleValidSubmit">
                    <DataAnnotationsValidator />
                    <ValidationSummary />
                    <label>
                        Plan Name:
                        <InputText id="name" @bind-Value="trainingPlanForm.Name" />
                    </label>
                    <label>
                        Active:
                        <InputCheckbox id="Active" @bind-Value="trainingPlanForm.Active" />
                    </label>
                    <button class="button" type="submit">@ButtonText</button>
                    <button class="button button-outline" type="button" @onclick="Close">Dismiss</button>
                </EditForm>
            </div>
        </div>
    </div>
}

@code {


    private TrainingPlan trainingPlanForm = new TrainingPlan();

    [Parameter] 
    public EventCallback<TrainingPlan> OnEdit { get; set; }

    private string ButtonText = "Submit";

    private bool _showModal = false;

    public void Open()
    {
        trainingPlanForm = new TrainingPlan();
        ButtonText = "Create";
        ShowModal();
    }


    public void Open(TrainingPlan trainingPlan)
    {
        trainingPlanForm = trainingPlan;
        ButtonText = "Edit";
        ShowModal();
    }

    private void ShowModal()
    {
        _showModal = true;
    }

    private void HandleValidSubmit()
    {
        OnEdit.InvokeAsync(trainingPlanForm);
        Close();
    }

    public void Close()
    {
        _showModal = false;
    }
}